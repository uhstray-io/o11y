# config file version
apiVersion: 1

# list of datasources to insert/update depending
# whats available in the database
datasources:

- name: Mimir
  type: prometheus
  access: proxy
  orgId: 1
  url: http://mimir-load-balancer:9009/prometheus
  version: 1
  editable: true
  jsonData:
    httpHeaderName1: "X-Scope-OrgID"
    alertmanagerUid: "alertmanager"
  secureJsonData:
    httpHeaderValue1: "o11y"
  isDefault: true

- name: Mimir Alertmanager
  uid: alertmanager
  type: alertmanager
  access: proxy
  orgId: 1
  url: http://mimir-load-balancer:9009/
  version: 1
  editable: true
  jsonData:
    httpHeaderName1: "X-Scope-OrgID"
    implementation: "cortex"
  secureJsonData:
    httpHeaderValue1: "o11y"

- name: Loki
  type: loki
  access: proxy
  orgId: 1
  url: http://loki:3100
  password:
  user:
  database:
  basicAuth: false
  basicAuthUser:
  basicAuthPassword:
  withCredentials:
  isDefault: false
  jsonData:
     graphiteVersion: "1.1"
     tlsAuth: false
     tlsAuthWithCACert: false
  secureJsonData:
    tlsCACert: "..."
    tlsClientCert: "..."
    tlsClientKey: "..."
    httpHeaderValue1: "o11y"
  version: 1
  editable: true

- name: Tempo
  type: tempo
  access: proxy
  orgId: 1
  url: http://tempo:3200
  basicAuth: false
  isDefault: false
  version: 1
  editable: true
  apiVersion: 1
  uid: tempo-authed
  jsonData:
    httpHeaderName1: 'X-Scope-OrgID'
    httpMethod: GET
    serviceMap:
      datasourceUid: Mimir
    tracesToLogsV2:
        # Field with an internal link pointing to a logs data source in Grafana.
        # datasourceUid value must match the uid value of the logs data source.
        datasourceUid: 'loki'
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        tags: ['job', 'instance', 'pod', 'namespace']
        filterByTraceID: false
        filterBySpanID: false
        customQuery: true
        query: 'method="$${__span.tags.method}"'
    tracesToProfiles:
        datasourceUid: 'grafana-pyroscope-datasource'
        tags: ['job', 'instance', 'pod', 'namespace']
        profileTypeId: 'process_cpu:cpu:nanoseconds:cpu:nanoseconds'
        customQuery: true
        query: 'method="$${__span.tags.method}"'
    nodeGraph:
        enabled: true
    search:
        hide: false
    traceQuery:
        timeShiftEnabled: true
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
    spanBar:
        type: 'Tag'
        tag: 'http.path'
    streamingEnabled:
        search: true
  secureJsonData:
    httpHeaderValue1: "o11y"