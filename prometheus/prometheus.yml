# my global config
global:
  scrape_interval: 5s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: "ops-dev"
    server: "alphacentauri"
    platform: "o11y"

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - rules.yml
  # - "first.rules"
  # - "second.rules"

# # alert
# alerting:
#   alertmanagers:
#   - scheme: http
#     static_configs:
#     - targets:
#       - "alertmanager:9093"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: prometheus

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: ["localhost:9090"]
        labels:
          service: prometheus

  - job_name: cadvisor

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: ["cadvisor:9092"]
        labels:
          service: cadvisor

  - job_name: node-exporter

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: ["node-exporter:9100"]
        labels:
          service: node-exporter

  - job_name: 'tempo'
    static_configs:
      - targets:
        - 'compactor:3200'
        - 'distributor:3200'
        - 'ingester-0:3200'
        - 'ingester-1:3200'
        - 'ingester-2:3200'
        - 'querier:3200'
        - 'query-frontend:3200'
        - 'metrics-generator:3200'

  # # Service Discovery for Docker Containers
  # - job_name: "docker-containers"
  #   docker_sd_configs:
  #     - host: unix:///var/run/docker.sock # You can also use http/https to connect to the Docker daemon.
  #   relabel_configs:
  #     # Only keep containers that have a `prometheus-job` label.
  #     - source_labels: [__meta_docker_container_label_prometheus_job]
  #       regex: .+
  #       action: keep
  #     # Use the task labels that are prefixed by `prometheus-`.
  #     - regex: __meta_docker_container_label_prometheus_(.+)
  #       action: labelmap
  #       replacement: $1

remote_write:
  - url: http://mimir-load-balancer:9009/api/v1/push
    # Add X-Scope-OrgID header so that Mimir knows what tenant the remote write data should be stored in.
    # In this case, our tenant is "demo"
    headers:
      X-Scope-OrgID: o11y
